SELECT date, service_id, worker_id, card, payment, pin, client_id, car_id, mileage
FROM public.carcar_service;

-- В качестве уникального идентификатора используем card клиента

-- Заполняем пустые ячейки поля pin
WITH DistinctPin AS (
	SELECT card, pin
	FROM carcar_service
	WHERE card IS NOT NULL
	AND pin IS NOT NULL
	GROUP BY card, pin
)
UPDATE public.carcar_service AS cs
SET pin = dp.pin
FROM DistinctPin AS dp
WHERE cs.card = dp.card;

-- Заполняем пустые ячейки поля payment
WITH DistinctPayment AS (
	SELECT card, payment
	FROM carcar_service
	WHERE card IS NOT NULL
	AND payment IS NOT NULL
	GROUP BY card, payment
)
UPDATE public.carcar_service AS cs
SET payment = dp.payment
FROM DistinctPayment AS dp
WHERE cs.card = dp.card;

-- Заполняем пустые ячейки поля card
WITH DistinctPayment AS (
	SELECT card, payment
	FROM carcar_service
	WHERE card IS NOT NULL
	AND payment IS NOT NULL
	GROUP BY card, payment
)
UPDATE public.carcar_service AS cs
SET card = dp.card
FROM DistinctPayment AS dp
WHERE cs.payment = dp.payment;

-- Создаем отдельную таблицу orders
CREATE TABLE IF NOT EXISTS public.orders(
	order_id integer primary key generated by default as identity, -- для гибкости
	date date,
	service_id integer,
	worker_id integer,
	card text,
	payment text,
	pin text,
	client_id integer,
	car_id integer,
	mileage text
);

-- Заполняем таблицу уникальными значениями
INSERT INTO public.orders (date, service_id, worker_id, card, payment, pin, client_id, car_id, mileage)
SELECT date, sr.service_id, wr.worker_id, card, payment, pin, cl.client_id, cr.car_id, mileage
FROM public.carcar_service as cs
INNER JOIN services AS sr ON cs.service = sr.service AND cs.service_addr = sr.service_address
INNER JOIN workers AS wr ON cs.w_phone = wr.phone
INNER JOIN clients AS cl ON cs.phone = cl.phone
INNER JOIN cars AS cr ON cs.vin = cr.vin

-- Проверка
SELECT date, service_id, worker_id, card, payment, pin, client_id, car_id, mileage
FROM public.orders;

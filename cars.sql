SELECT vin, car, car_number, color
FROM public.carcar_service;

-- В качестве уникального идентификатора используем vin автомобиля

-- Заполняем пустые ячейки поля color
WITH DistinctColor AS (
	SELECT vin, color
	FROM carcar_service
	WHERE vin IS NOT NULL
	AND color IS NOT NULL
	GROUP BY vin, color
)
UPDATE public.carcar_service AS cs
SET color = dc.color
FROM DistinctColor AS dc
WHERE cs.vin = dc.vin;

-- Заполняем пустые ячейки поля car
WITH DistinctCar AS (
	SELECT vin, car
	FROM carcar_service
	WHERE vin IS NOT NULL
	AND car IS NOT NULL
	GROUP BY vin, car
)
UPDATE public.carcar_service AS cs
SET car = dc.car
FROM DistinctCar AS dc
WHERE cs.vin = dc.vin;

-- Заполняем пустые ячейки поля car_number
WITH DistinctCar_number AS (
	SELECT vin, car_number
	FROM carcar_service
	WHERE vin IS NOT NULL
	AND car_number IS NOT NULL
	GROUP BY vin, car_number
)
UPDATE public.carcar_service AS cs
SET car_number = dc.car_number
FROM DistinctCar_number AS dc
WHERE cs.vin = dc.vin;

-- Заполняем пустые ячейки поля vin
WITH DistinctVin AS (
	SELECT car, car_number, color, vin
	FROM carcar_service
	WHERE vin IS NOT NULL
	AND color IS NOT NULL
	AND car IS NOT NULL
	AND car_number IS NOT NULL
	GROUP BY car, car_number, color, vin
)
UPDATE public.carcar_service AS cs
SET vin = dv.vin
FROM DistinctVin AS dv
WHERE cs.color = dv.color
AND cs.car = dv.car
AND cs.car_number = dv.car_number;

-- Создаем отдельную таблицу cars
CREATE TABLE IF NOT EXISTS public.cars(
	car_id integer primary key generated by default as identity, -- для гибкости
	vin text,
	car text,
	car_number text,
	color text
);

-- Заполняем таблицу уникальными значениями
INSERT INTO public.cars (vin, car, car_number, color)
SELECT DISTINCT vin, car, car_number, color
FROM public.carcar_service
ORDER BY car, car_number, color, vin;

-- Проверка
SELECT car_id, vin, car, car_number, color
FROM public.cars;

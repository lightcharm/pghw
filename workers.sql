SELECT w_name, phone, experience, wages
FROM public.carcar_service;

-- В качестве уникального идентификатора используем w_phone работника

-- Заполняем пустые ячейки поля name
WITH DistinctWname AS (
	SELECT w_phone, w_name
	FROM carcar_service
	WHERE w_phone IS NOT NULL
	AND w_name IS NOT NULL
	GROUP BY w_phone, w_name
)
UPDATE public.carcar_service AS cs
SET w_name = dw.w_name
FROM DistinctWname AS dw
WHERE cs.w_phone = dw.w_phone;

-- Заполняем пустые ячейки поля w_exp
-- Так как в исходных данных w_exp никак не коррелируют с date, то при заполнении ячеек =null тоже нет смысла это учитывать
WITH DistinctWexp AS (
	SELECT w_phone, w_exp
	FROM carcar_service
	WHERE w_phone IS NOT NULL
	AND w_exp IS NOT NULL
	GROUP BY w_phone, w_exp
)
UPDATE public.carcar_service AS cs
SET w_exp = dw.w_exp
FROM DistinctWexp AS dw
WHERE cs.w_phone = dw.w_phone;

-- Заполняем пустые ячейки поля wages
WITH DistinctWages AS (
	SELECT w_phone, wages
	FROM carcar_service
	WHERE w_phone IS NOT NULL
	AND wages IS NOT NULL
	GROUP BY w_phone, wages
)
UPDATE public.carcar_service AS cs
SET wages = dw.wages
FROM DistinctWages AS dw
WHERE cs.w_phone = dw.w_phone;

-- Заполняем пустые ячейки поля w_phone
WITH DistinctPhone AS (
	SELECT wages, w_phone, w_name, w_exp
	FROM carcar_service
	WHERE w_phone IS NOT NULL
	AND wages IS NOT NULL
	AND w_exp IS NOT NULL
	AND w_name IS NOT NULL
	GROUP BY wages, w_phone, w_name, w_exp
)
UPDATE public.carcar_service AS cs
SET w_phone = dw.w_phone
FROM DistinctPhone AS dw
WHERE cs.wages = dw.wages
AND cs.w_name = dw.w_name
AND cs.w_exp = dw.w_exp;

-- Создаем отдельную таблицу workers
CREATE TABLE IF NOT EXISTS public.workers(
	worker_id integer primary key generated by default as identity, -- для гибкости
	first_name text,
	last_name text,
	phone text,
	experience integer,
	wages integer
);

-- Заполняем таблицу уникальными значениями
INSERT INTO public.workers (first_name, last_name, phone, experience, wages)
SELECT DISTINCT split_part(w_name, ' ', 1) AS first_name, split_part(w_name, ' ', 2) AS last_name, w_phone AS phone, w_exp::integer AS experience, wages::integer AS wages
FROM public.carcar_service
ORDER BY first_name, last_name, experience, wages, phone;

-- Проверка
SELECT worker_id, first_name, last_name, phone, experience, wages
FROM public.workers;
